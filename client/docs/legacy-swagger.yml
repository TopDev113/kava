---
swagger: "2.0"
info:
  version: "3.0"
  title: Kava Light Client RPC
  description: A REST interface for state queries, transaction generation and broadcasting.
tags:
  - name: CDP
    description: CDP module APIs
  - name: Auction
    description: Auction module APIs
  - name: BEP3
    description: BEP3 module APIs
  - name: Incentive
    description: Incentive module APIs
  - name: Pricefeed
    description: Auction module APIs
  - name: Hard
    description: Hard module APIs
  - name: Swap
    description: Swap module APIs
  - name: Committee
    description: Committee module APIs
  - name: Kavadist
    description: Kavadist module APIs
  - name: Issuance
    description: Issuance module APIs
  - name: Vesting
    description: Validator vesting module APIs
schemes:
  - https
host: api.data.kava.io
securityDefinitions:
  kms:
    type: basic
paths:
  /cdp:
    post:
      deprecated: true
      summary: Create a cdp transaction
      tags:
        - CDP
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: create cdp post parameters
          name: post_cdp_req
          in: body
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/LegacyBaseReq"
              owner:
                $ref: "#/definitions/LegacyAddress"
              collateral:
                $ref: "#/definitions/LegacyCoinCollateral"
              principal:
                $ref: "#/definitions/LegacyCoinPrincipal"
              collateral_type:
                $ref: "#/definitions/LegacyCollateralType"
      responses:
        200:
          description: Tx was successfully generated
          schema:
            $ref: "#/definitions/LegacyStdTx"
        400:
          description: Invalid request
        500:
          description: Server internal error
  /cdp/{owner}/{collateral_type}/deposits:
    post:
      deprecated: true
      summary: Create a deposit to cdp transaction
      tags:
        - CDP
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: owner
          description: Owner address in bech32 format
          required: true
          type: string
          x-example: kava1ffv7nhd3z6sych2qpqkk03ec6hzkmufy0r2s4c
        - in: path
          name: collateral_type
          description: Collateral type
          required: true
          type: string
          x-example: xrpb-a
        - description: deposit cdp post parameters
          name: post_deposit_req
          in: body
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/LegacyBaseReq"
              owner:
                $ref: "#/definitions/LegacyAddress"
              depositor:
                $ref: "#/definitions/LegacyAddress"
              collateral:
                $ref: "#/definitions/LegacyCoinCollateral"
              collateral_type:
                $ref: "#/definitions/LegacyCollateralType"
      responses:
        200:
          description: Tx was successfully generated
          schema:
            $ref: "#/definitions/LegacyStdTx"
        400:
          description: Invalid request
        500:
          description: Server internal error
  /cdp/{owner}/{collateral_type}/withdraw:
    post:
      deprecated: true
      summary: create a withdraw collateral transaction
      tags:
        - CDP
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: owner
          description: Owner address in bech32 format
          required: true
          type: string
          x-example: kava1ffv7nhd3z6sych2qpqkk03ec6hzkmufy0r2s4c
        - in: path
          name: collateral_type
          description: Collateral type
          required: true
          type: string
          x-example: xrpb-a
        - description: withdraw cdp post parameters
          name: post_withdraw_req
          in: body
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/LegacyBaseReq"
              owner:
                $ref: "#/definitions/LegacyAddress"
              depositor:
                $ref: "#/definitions/LegacyAddress"
              collateral:
                $ref: "#/definitions/LegacyCoinCollateral"
              collateral_type:
                $ref: "#/definitions/LegacyCollateralType"
      responses:
        200:
          description: Tx was successfully generated
          schema:
            $ref: "#/definitions/LegacyStdTx"
        400:
          description: Invalid request
        500:
          description: Server internal error
  /cdp/{owner}/{collateral_type}/draw:
    post:
      deprecated: true
      summary: Create a draw debt transaction
      tags:
        - CDP
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: owner
          description: Owner address in bech32 format
          required: true
          type: string
          x-example: kava1ffv7nhd3z6sych2qpqkk03ec6hzkmufy0r2s4c
        - in: path
          name: collateral_type
          description: Collateral type
          required: true
          type: string
          x-example: xrpb-a
        - description: draw cdp post parameters
          name: post_draw_req
          in: body
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/LegacyBaseReq"
              owner:
                $ref: "#/definitions/LegacyAddress"
              principal:
                $ref: "#/definitions/LegacyCoinPrincipal"
              collateral_type:
                $ref: "#/definitions/LegacyCollateralType"
      responses:
        200:
          description: Tx was successfully generated
          schema:
            $ref: "#/definitions/LegacyStdTx"
        400:
          description: Invalid request
        500:
          description: Server internal error
  /cdp/{owner}/{collateral_type}/repay:
    post:
      deprecated: true
      summary: Repay debt from a CDP
      tags:
        - CDP
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: owner
          description: Owner address in bech32 format
          required: true
          type: string
          x-example: kava1ffv7nhd3z6sych2qpqkk03ec6hzkmufy0r2s4c
        - in: path
          name: collateral_type
          description: Collateral type
          required: true
          type: string
          x-example: xrpb-a
        - description: repay cdp post parameters
          name: post_repay_req
          in: body
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/LegacyBaseReq"
              owner:
                $ref: "#/definitions/LegacyAddress"
              payment:
                $ref: "#/definitions/LegacyCoinPrincipal"
              collateral_type:
                $ref: "#/definitions/LegacyCollateralType"
      responses:
        200:
          description: Tx was successfully generated
          schema:
            $ref: "#/definitions/LegacyStdTx"
        400:
          description: Invalid request
        500:
          description: Server internal error
  /cdp/{owner}/{collateral_type}/liquidate:
    post:
      deprecated: true
      summary: Attempt to liquidate a CDP whose collateralization ratio is under its liquidaiton ratio
      tags:
        - CDP
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: owner
          description: Owner address in bech32 format
          required: true
          type: string
          x-example: kava1ffv7nhd3z6sych2qpqkk03ec6hzkmufy0r2s4c
        - in: path
          name: collateral_type
          description: Collateral type
          required: true
          type: string
          x-example: xrpb-a
        - description: liquidate cdp post parameters
          name: post_liquidate_req
          in: body
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/LegacyBaseReq"
              owner:
                $ref: "#/definitions/LegacyAddress"
              collateral_type:
                $ref: "#/definitions/LegacyCollateralType"
      responses:
        200:
          description: Tx was successfully generated
          schema:
            $ref: "#/definitions/LegacyStdTx"
        400:
          description: Invalid request
        500:
          description: Server internal error
  /cdp/accounts:
    get:
      deprecated: true
      summary: Get the cdp module accounts
      tags:
        - CDP
      produces:
        - application/json
      responses:
        200:
          description: The cdp module accounts
          schema:
            type: object
            properties:
              height:
                type: string
                example: "100"
              result:
                type: array
                items:
                  type: object
                  properties:
                    account_number:
                      type: number
                    address:
                      $ref: "#/definitions/LegacyAddress"
                    coins:
                      type: array
                      items:
                        $ref: "#/definitions/LegacyCoin"
                    name:
                      type: string
                    permissions:
                      type: array
                      items:
                        type: string
                    public_key:
                      $ref: "#/definitions/LegacyPublicKey"
                    sequence:
                      type: number
        500:
          description: Server internal error
  /cdp/parameters:
    get:
      deprecated: true
      summary: Get the parameters of the cdp module
      tags:
        - CDP
      produces:
        - application/json
      responses:
        200:
          description: The parameters of the cdp module
          schema:
            type: object
            properties:
              collateral_params:
                type: array
                items:
                  $ref: "#/definitions/LegacyCollateralParam"
              debt_params:
                type: array
                items:
                  $ref: "#/definitions/LegacyDebtParam"
              global_debt_limit:
                type: array
                items:
                  $ref: "#/definitions/LegacyCoinCollateral"
              surplus_auction_threshold:
                type: string
                example: "1000000000"
              surplus_auction_lot:
                type: string
                example: "10000000"
              debt_auction_threshold:
                type: string
                example: "1000000000"
              savings_distribution_frequency:
                type: string
                example: "60000000"
              circuit_breaker:
                type: boolean
                example: false
        500:
          description: Server internal error
  /cdp/cdps/cdp/{owner}/{collateral_type}:
    get:
      deprecated: true
      summary: Get the cdp associated with the input owner address and collateral type
      tags:
        - CDP
      produces:
        - application/json
      parameters:
        - in: path
          name: owner
          description: Owner address in bech32 format
          required: true
          type: string
          x-example: kava1ffv7nhd3z6sych2qpqkk03ec6hzkmufy0r2s4c
        - in: path
          name: collateral_type
          description: Collateral type
          required: true
          type: string
          x-example: xrpb-a
      responses:
        200:
          description: CDP associated with owner
          schema:
            $ref: "#/definitions/LegacyCdpResponse"
        500:
          description: Server internal error
  /cdp/cdps/collateralType/{collateral_type}:
    get:
      deprecated: true
      summary: Get all cdps with collateral type equal to the input collateral type
      tags:
        - CDP
      produces:
        - application/json
      parameters:
        - in: path
          name: collateral_type
          description: Collateral Type
          required: true
          type: string
          x-example: xrpb-a
      responses:
        200:
          description: All CDPs with the input collateral type
          schema:
            type: object
            properties:
              height:
                type: string
                example: "100"
              result:
                type: array
                x-nullable: true
                items:
                  $ref: "#/definitions/LegacyCdpResponse"
        500:
          description: Server internal error
  /cdp/cdps/ratio/{collateral_type}/{ratio}:
    get:
      deprecated: true
      summary: Get all cdps with collateral type equal to the input collateral type and collateralization ratio strictly less than the input ratio
      tags:
        - CDP
      produces:
        - application/json
      parameters:
        - in: path
          name: collateral_type
          description: Collateral type
          required: true
          type: string
          x-example: xrpb-a
        - in: path
          name: ratio
          description: Collateralization ratio
          required: true
          type: string
          x-example: "2.0"
      responses:
        200:
          description: All CDPs with the input collateral type and collateralization ratio less than the input ratio
          schema:
            type: object
            properties:
              height:
                type: string
                example: "100"
              result:
                type: array
                x-nullable: true
                items:
                  $ref: "#/definitions/LegacyCdpResponse"
        500:
          description: Server internal error
  /cdp/cdps/cdp/deposits/{owner}/{collateral_type}:
    get:
      deprecated: true
      summary: Get the deposits associated with the cdp owned by an address for a collateral type
      tags:
        - CDP
      produces:
        - application/json
      parameters:
        - in: path
          name: owner
          description: Owner address in bech32 format
          required: true
          type: string
          x-example: kava1ffv7nhd3z6sych2qpqkk03ec6hzkmufy0r2s4c
        - in: path
          name: collateral_type
          description: Collateral type
          required: true
          type: string
          x-example: xrpb-a
      responses:
        200:
          description: Deposits associated with the cdp
          schema:
            type: object
            properties:
              height:
                type: string
                example: "100"
              result:
                type: array
                items:
                  $ref: "#/definitions/LegacyCdpDepositResponse"
        500:
          description: Server internal error
  /cdp/cdps:
    get:
      deprecated: true
      summary: Query all active cdps
      tags:
        - CDP
      produces:
        - application/json
      parameters:
        - in: query
          name: owner
          description: Owner address in bech32 format
          required: false
          type: string
          x-example: kava1ffv7nhd3z6sych2qpqkk03ec6hzkmufy0r2s4c
        - in: query
          name: collateral_type
          description: Collateral type
          required: false
          type: string
          x-example: xrpb-a
        - in: query
          name: id
          description: CDP ID
          required: false
          type: string
          x-example: "4"
        - in: query
          name: ratio
          description: Collateralization ratio
          required: false
          type: string
          x-example: "2.75"
      responses:
        200:
          description: Query cdps
          schema:
            type: object
            properties:
              height:
                type: string
                example: "100"
              result:
                type: array
                items:
                  $ref: "#/definitions/LegacyCdpResponse"
        500:
          description: Internal Server Error
  /bep3/swap/create:
    post:
      deprecated: true
      summary: Generate a create atomic swap transaction
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - BEP3
      parameters:
        - in: body
          name: Create atomic swap request body
          schema:
            properties:
              base_req:
                $ref: "#/definitions/LegacyBaseReq"
              from:
                $ref: "#/definitions/LegacyAddress"
              to:
                $ref: "#/definitions/LegacyAddress"
              recipient_other_chain:
                $ref: "#/definitions/LegacyBinanceChainAddress"
              sender_other_chain:
                $ref: "#/definitions/LegacyBinanceChainAddress2"
              random_number_hash:
                $ref: "#/definitions/LegacyRandomNumberHash"
              timestamp:
                $ref: "#/definitions/LegacyTimestamp"
              height_span:
                $ref: "#/definitions/LegacyHeightSpan"
              cross_chain:
                $ref: "#/definitions/LegacyCrossChain"
      responses:
        200:
          description: The transaction was successfully generated
          schema:
            $ref: "#/definitions/LegacyStdTx"
        400:
          description: Invalid request
        500:
          description: Internal server error
  /bep3/swap/claim:
    post:
      deprecated: true
      summary: Generate a claim atomic swap transaction
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - BEP3
      parameters:
        - in: body
          name: Create atomic swap request body
          schema:
            properties:
              base_req:
                $ref: "#/definitions/LegacyBaseReq"
              from:
                $ref: "#/definitions/LegacyAddress"
              swap_id:
                type: string
                example: "3ca20f0152f03b0aabe73e7aa1ddf78b9048ede5a9a73846e1ef53bebbfa4185"
              random_number:
                type: string
                example: "e3d0a98b459f72231da69c3bd771c1e721fef4be83c14b80dc805ba71019eebe"
      responses:
        200:
          description: The transaction was successfully generated
          schema:
            $ref: "#/definitions/LegacyStdTx"
        400:
          description: Invalid request
        500:
          description: Internal server error
  /bep3/swap/refund:
    post:
      deprecated: true
      summary: Generate a refund atomic swap transaction
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - BEP3
      parameters:
        - in: body
          name: Create atomic swap request body
          schema:
            properties:
              base_req:
                $ref: "#/definitions/LegacyBaseReq"
              from:
                $ref: "#/definitions/LegacyAddress"
              swap_id:
                type: string
                example: "1b00244021ec239867e5b8c44bcd98e40f3148806a8c0a8fd3418872986becba"
      responses:
        200:
          description: The transaction was successfully generated
          schema:
            $ref: "#/definitions/LegacyStdTx"
        400:
          description: Invalid request
        500:
          description: Internal server error
  /bep3/swap/{swap-id}:
    get:
      deprecated: true
      summary: Get the atomic swap object associated with the input swap ID
      tags:
        - BEP3
      produces:
        - application/json
      parameters:
        - in: path
          required: true
          name: swap-id
          description: the swap ID
          type: string
          x-example: 1b00244021ec239867e5b8c44bcd98e40f3148806a8c0a8fd3418872986becba
      responses:
        200:
          description: Atomic swap
          schema:
            type: object
            properties:
              height:
                type: string
                example: "548883"
              result:
                $ref: "#/definitions/LegacyAtomicSwapResponse"
        500:
          description: Server internal error
  /bep3/swaps:
    get:
      deprecated: true
      summary: Get all atomic swaps
      tags:
        - BEP3
      produces:
        - application/json
      responses:
        200:
          description: All atomic swaps
          schema:
            type: object
            properties:
              height:
                type: string
                example: "100"
              result:
                type: array
                x-nullable: true
                items:
                  $ref: "#/definitions/LegacyAtomicSwapResponse"
        500:
          description: Server internal error
  /bep3/supply/{denom}:
    get:
      deprecated: true
      summary: Get the asset supply for the input denom
      tags:
        - BEP3
      produces:
        - application/json
      parameters:
        - in: path
          type: string
          required: true
          name: denom
          x-example: bnb
      responses:
        200:
          description: Asset supply
          schema:
            type: object
            properties:
              height:
                type: string
                example: "100"
              result:
                type: object
                $ref: "#/definitions/LegacyAssetSupplyResponse"
        500:
          description: Server internal error
  /bep3/parameters:
    get:
      deprecated: true
      summary: Get the current parameters of the BEP3 module
      tags:
        - BEP3
      produces:
        - application/json
      responses:
        200:
          description: BEP3 module parameters
          schema:
            type: object
            properties:
              height:
                type: string
                example: "548883"
              result:
                type: object
                $ref: "#/definitions/LegacyBep3ParamsResponse"
        500:
          description: Server internal error
  /auction/auctions/{id}/bids:
    post:
      deprecated: true
      summary: Generate a place bid transaction
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Auction
      parameters:
        - in: path
          name: id
          description: Auction id
          required: true
          type: string
          x-example: "1"
        - in: body
          name: Auction bid request body
          schema:
            properties:
              base_req:
                $ref: "#/definitions/LegacyBaseReq"
              amount:
                $ref: "#/definitions/LegacyCoinBid"

      responses:
        200:
          description: The transaction was successfully generated
          schema:
            $ref: "#/definitions/LegacyStdTx"
        400:
          description: Invalid request
        500:
          description: Internal server error
  /auction/parameters:
    get:
      deprecated: true
      summary: Query auction parameters
      produces:
        - application/json
      tags:
        - Auction
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/LegacyAuctionParameters"
        500:
          description: Internal Server Error
  /auction/auctions:
    get:
      deprecated: true
      summary: Query auctions
      description: Query all ongoing auctions
      produces:
        - application/json
      tags:
        - Auction
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
                example: "100"
              result:
                type: array
                items:
                  $ref: "#/definitions/LegacyAuctionResponse"
        500:
          description: Internal Server Error
  /auction/auctions/{id}:
    get:
      deprecated: true
      summary: Query auction
      description: Query auction by id
      produces:
        - application/json
      tags:
        - Auction
      parameters:
        - in: path
          name: id
          description: Auction id
          required: true
          type: string
          x-example: "1"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/LegacyAuctionResponse"
        400:
          description: invalid auction id
        500:
          description: Internal Server Error
  /pricefeed/postprice:
    post:
      deprecated: true
      summary: Generate post price transaction
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Pricefeed
      parameters:
        - description: post price request
          name: post_price_req
          in: body
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/LegacyBaseReq"
              market_id:
                type: string
                example: "xrp:usd"
              price:
                type: string
                example: "0.298464000000000007"
              expiry:
                type: string
                example: "158551630291"
      responses:
        200:
          description: The transaction was successfully generated
          schema:
            $ref: "#/definitions/LegacyStdTx"
        400:
          description: Invalid request
        500:
          description: Internal server error
  /pricefeed/parameters:
    get:
      deprecated: true
      summary: Query pricefeed parameters
      produces:
        - application/json
      tags:
        - Pricefeed
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/LegacyPricefeedParameters"
        500:
          description: Internal Server Error
  /pricefeed/markets:
    get:
      deprecated: true
      summary: Query markets in the pricefeed
      produces:
        - application/json
      tags:
        - Pricefeed
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
                example: "100"
              result:
                type: array
                items:
                  $ref: "#/definitions/LegacyMarket"
        500:
          description: Internal Server Error
  /pricefeed/oracles/{market_id}:
    get:
      deprecated: true
      summary: Query markets in the pricefeed
      produces:
        - application/json
      tags:
        - Pricefeed
      parameters:
        - in: path
          name: market_id
          description: the market id of the market
          required: true
          type: string
          x-example: "xrp:usd"
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
                example: "100"
              result:
                type: array
                items:
                  $ref: "#/definitions/LegacyAddress"
        500:
          description: Internal Server Error
  /pricefeed/rawprices/{market_id}:
    get:
      deprecated: true
      summary: Query markets in the pricefeed
      produces:
        - application/json
      tags:
        - Pricefeed
      parameters:
        - in: path
          name: market_id
          description: the market id of the market
          required: true
          type: string
          x-example: "xrp:usd"
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
                example: "100"
              result:
                type: array
                items:
                  $ref: "#/definitions/LegacyPostedPrice"

        500:
          description: Internal Server Error
  /pricefeed/price/{market_id}:
    get:
      deprecated: true
      summary: Query markets in the pricefeed
      produces:
        - application/json
      tags:
        - Pricefeed
      parameters:
        - in: path
          name: market_id
          description: the market id of the market
          required: true
          type: string
          x-example: "xrp:usd"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/LegacyPrice"
        500:
          description: Internal Server Error
  /incentive/claim-cdp:
    post:
      deprecated: true
      summary: Claim USDX incentive rewards from earned from CDPs
      tags:
        - Incentive
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: Incentive claim CDP body
          schema:
            properties:
              base_req:
                $ref: "#/definitions/LegacyBaseReq"
              sender:
                $ref: "#/definitions/LegacyAddress"
              multiplier_name:
                type: string
                example: "small"
              denoms_to_claim:
                type: array
                items:
                  type: string
                  example: "ukava"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/LegacyStdTx"
        400:
          description: Invalid request
        500:
          description: Internal server error
  /incentive/claim-hard:
    post:
      deprecated: true
      summary: Claim Hard supply/borrow rewards
      tags:
        - Incentive
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: Incentive claim Hard body
          schema:
            properties:
              base_req:
                $ref: "#/definitions/LegacyBaseReq"
              sender:
                $ref: "#/definitions/LegacyAddress"
              multiplier_name:
                type: string
                example: "small"
              denoms_to_claim:
                type: array
                items:
                  type: string
                  example: "ukava"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/LegacyStdTx"
        400:
          description: Invalid request
        500:
          description: Internal server error
  /incentive/claim-delegator:
    post:
      deprecated: true
      summary: Claim Kava delegation rewards
      tags:
        - Incentive
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: Incentive claim delegator body
          schema:
            properties:
              base_req:
                $ref: "#/definitions/LegacyBaseReq"
              sender:
                $ref: "#/definitions/LegacyAddress"
              multiplier_name:
                type: string
                example: "small"
              denoms_to_claim:
                type: array
                items:
                  type: string
                  example: "ukava"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/LegacyStdTx"
        400:
          description: Invalid request
        500:
          description: Internal server error
  /incentive/claim-swap:
    post:
      deprecated: true
      summary: Claim Swap liquidity provider rewards
      tags:
        - Incentive
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: Incentive claim swap body
          schema:
            properties:
              base_req:
                $ref: "#/definitions/LegacyBaseReq"
              sender:
                $ref: "#/definitions/LegacyAddress"
              multiplier_name:
                type: string
                example: "small"
              denoms_to_claim:
                type: array
                items:
                  type: string
                  example: "ukava"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/LegacyStdTx"
        400:
          description: Invalid request
        500:
          description: Internal server error
  /incentive/rewards:
    get:
      deprecated: true
      summary: Get earned Incentive rewards
      tags:
        - Incentive
      produces:
        - application/json
      responses:
        200:
          description: Incentive rewards
          schema:
            type: object
            properties:
              height:
                type: string
                example: "100"
              result:
                type: array
                x-nullable: true
                items:
                  $ref: "#/definitions/LegacyRewardResult"
        500:
          description: Server internal error
  /incentive/parameters:
    get:
      deprecated: true
      summary: Get the current parameters of the incentive module
      tags:
        - Incentive
      produces:
        - application/json
      responses:
        200:
          description: USDX Incentive Claims
          schema:
            type: object
            properties:
              height:
                type: string
                example: "100"
              result:
                type: array
                x-nullable: true
                items:
                  $ref: "#/definitions/LegacyIncentiveParams"
        500:
          description: Server internal error
  /vesting/circulatingsupply:
    get:
      deprecated: true
      summary: Get the current circulating supply of KAVA
      tags:
        - Vesting
      produces:
        - application/json
      responses:
        200:
          description: KAVA circulating supply
          schema:
            properties:
              height:
                type: string
                example: "100"
              result:
                type: string
                example: "81443180"
        500:
          description: Server internal error
  /vesting/totalsupply:
    get:
      deprecated: true
      summary: Get the total supply of KAVA
      tags:
        - Vesting
      produces:
        - application/json
      responses:
        200:
          description: KAVA total supply
          schema:
            properties:
              height:
                type: string
                example: "100"
              result:
                type: string
                example: "120000000"
        500:
          description: Server internal error
  /vesting/circulatingsupplyhard:
    get:
      deprecated: true
      summary: Get the current circulating supply of HARD
      tags:
        - Vesting
      produces:
        - application/json
      responses:
        200:
          description: HARD circulating supply
          schema:
            properties:
              height:
                type: string
                example: "100"
              result:
                type: string
                example: "63750000"
        500:
          description: Server internal error
  /vesting/totalsupplyhard:
    get:
      deprecated: true
      summary: Get the total supply of HARD
      tags:
        - Vesting
      produces:
        - application/json
      responses:
        200:
          description: HARD total supply
          schema:
            properties:
              height:
                type: string
                example: "100"
              result:
                type: string
                example: "200000000"
        500:
          description: Server internal error
  /vesting/circulatingsupplyswp:
    get:
      deprecated: true
      summary: Get the current circulating supply of SWP
      tags:
        - Vesting
      produces:
        - application/json
      responses:
        200:
          description: SWP circulating supply
          schema:
            properties:
              height:
                type: string
                example: "100"
              result:
                type: string
                example: "63750000"
        500:
          description: Server internal error
  /vesting/circulatingsupplyusdx:
    get:
      deprecated: true
      summary: Get the current circulating supply of USDX
      tags:
        - Vesting
      produces:
        - application/json
      responses:
        200:
          description: USDX circulating supply
          schema:
            properties:
              height:
                type: string
                example: "100"
              result:
                type: string
                example: "63750000"
        500:
          description: Server internal error
  /vesting/totalsupplyusdx:
    get:
      deprecated: true
      summary: Get the total supply of USDX
      tags:
        - Vesting
      produces:
        - application/json
      responses:
        200:
          description: USDX total supply
          schema:
            properties:
              height:
                type: string
                example: "100"
              result:
                type: string
                example: "200000000"
        500:
          description: Server internal error
  /committee/committees/{committee-id}/proposals:
    post:
      deprecated: true
      summary: Create a new proposal for a committee
      tags:
        - Committee
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: committee-id
          required: true
          type: string
          x-example: 1
        - in: body
          name: proposal request body
          schema:
            properties:
              base_req:
                $ref: "#/definitions/LegacyBaseReq"
              pub_proposal:
                $ref: "#/definitions/LegacyPubProposal"
              proposer:
                $ref: "#/definitions/LegacyAddress"
      responses:
        200:
          description: The transaction was successfully generated
          schema:
            $ref: "#/definitions/LegacyStdTx"
        400:
          description: Invalid request
        500:
          description: Internal server error
    get:
      deprecated: true
      summary: Query proposals
      description: Query all proposals for a committee
      produces:
        - application/json
      tags:
        - Committee
      parameters:
        - in: path
          name: committee-id
          required: true
          type: string
          x-example: 1
      responses:
        200:
          description: Committee governance proposals
          schema:
            type: object
            properties:
              height:
                type: string
                example: "100"
              result:
                type: array
                items:
                  $ref: "#/definitions/LegacyCommitteeProposal"
        400:
          description: Invalid query parameters
        500:
          description: Internal Server Error
  /committee/proposals/{proposal-id}/votes:
    post:
      deprecated: true
      summary: Create a new vote for a proposal
      tags:
        - Committee
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: proposal-id
          required: true
          type: string
          x-example: 1
        - in: body
          name: proposal request body
          schema:
            properties:
              base_req:
                $ref: "#/definitions/LegacyBaseReq"
              voter:
                $ref: "#/definitions/LegacyAddress"
              vote_type:
                type: string
                example: "yes"
      responses:
        200:
          description: The transaction was successfully generated
          schema:
            $ref: "#/definitions/LegacyStdTx"
        400:
          description: Invalid request
        500:
          description: Internal server error
    get:
      deprecated: true
      summary: Query proposal votes
      description: Query proposal votes by proposal ID
      tags:
        - Committee
      produces:
        - application/json
      parameters:
        - in: path
          name: proposal-id
          required: true
          type: string
          x-example: 1
      responses:
        200:
          description: Votes
          schema:
            type: object
            properties:
              height:
                type: string
                example: "100"
              result:
                type: array
                items:
                  $ref: "#/definitions/LegacyCommitteeVote"
        400:
          description: Invalid query parameters
        500:
          description: Internal Server Error
  /committee/committees:
    get:
      deprecated: true
      summary: Query committees
      description: Query all committees
      tags:
        - Committee
      produces:
        - application/json
      responses:
        200:
          description: Committees
          schema:
            type: object
            properties:
              height:
                type: string
                example: "100"
              result:
                type: array
                items:
                  $ref: "#/definitions/LegacyCommittee"
        400:
          description: Invalid query parameters
        500:
          description: Internal Server Error
  /committee/committees/{committee-id}:
    get:
      deprecated: true
      summary: Query committee
      description: Query committee by ID
      tags:
        - Committee
      produces:
        - application/json
      parameters:
        - in: path
          name: committee-id
          required: true
          type: string
          x-example: 1
      responses:
        200:
          description: Committee
          schema:
            type: object
            properties:
              height:
                type: string
                example: "100"
              result:
                type: object
                $ref: "#/definitions/LegacyCommittee"
        400:
          description: Invalid query parameters
        500:
          description: Internal Server Error
  /committee/proposals/{proposal-id}:
    get:
      deprecated: true
      summary: Query proposal
      description: Query proposal by ID
      tags:
        - Committee
      produces:
        - application/json
      parameters:
        - in: path
          name: proposal-id
          required: true
          type: string
          x-example: 1
      responses:
        200:
          description: Proposal
          schema:
            type: object
            properties:
              height:
                type: string
                example: "100"
              result:
                type: object
                $ref: "#/definitions/LegacyCommitteeProposal"
        400:
          description: Invalid query parameters
        500:
          description: Internal Server Error
  /committee/proposals/{proposal-id}/propser:
    get:
      deprecated: true
      summary: Query proposer
      description: Query proposer by proposal ID
      tags:
        - Committee
      produces:
        - application/json
      parameters:
        - in: path
          name: proposal-id
          required: true
          type: string
          x-example: 1
      responses:
        200:
          description: Proposer
          schema:
            type: object
            properties:
              height:
                type: string
                example: "100"
              result:
                type: object
                $ref: "#/definitions/LegacyProposer"
        400:
          description: Invalid query parameters
        500:
          description: Internal Server Error
  /committee/proposals/{proposal-id}/tally:
    get:
      deprecated: true
      summary: Query proposal tally
      description: Query proposal tally by proposal ID
      tags:
        - Committee
      produces:
        - application/json
      parameters:
        - in: path
          name: proposal-id
          required: true
          type: string
          x-example: 1
      responses:
        200:
          description: Vote tally
          schema:
            type: object
            properties:
              height:
                type: string
                example: "100"
              result:
                type: string
                example: "3"
        400:
          description: Invalid query parameters
        500:
          description: Internal Server Error
  /hard/deposit:
    post:
      deprecated: true
      summary: Deposit funds to hard liquidity pool
      tags:
        - Hard
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: hard deposit body
          schema:
            properties:
              base_req:
                $ref: "#/definitions/LegacyBaseReq"
              depositor:
                $ref: "#/definitions/LegacyAddress"
              amount:
                $ref: "#/definitions/LegacyCoins"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/LegacyStdTx"
        400:
          description: Invalid request
        500:
          description: Internal server error
  /hard/withdraw:
    post:
      deprecated: true
      summary: Withdraw funds from hard liquidity pool
      tags:
        - Hard
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: hard withdraw body
          schema:
            properties:
              base_req:
                $ref: "#/definitions/LegacyBaseReq"
              depositor:
                $ref: "#/definitions/LegacyAddress"
              amount:
                $ref: "#/definitions/LegacyCoins"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/LegacyStdTx"
        400:
          description: Invalid request
        500:
          description: Internal server error
  /hard/borrow:
    post:
      deprecated: true
      summary: Borrow funds from hard liquidity pool
      tags:
        - Hard
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: hard borrow body
          schema:
            properties:
              base_req:
                $ref: "#/definitions/LegacyBaseReq"
              depositor:
                $ref: "#/definitions/LegacyAddress"
              amount:
                $ref: "#/definitions/LegacyCoins"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/LegacyStdTx"
        400:
          description: Invalid request
        500:
          description: Internal server error
  /hard/repay:
    post:
      deprecated: true
      summary: Repay funds borrowed from hard liquidity pool
      tags:
        - Hard
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: hard repay body
          schema:
            properties:
              base_req:
                $ref: "#/definitions/LegacyBaseReq"
              owner:
                $ref: "#/definitions/LegacyAddress"
              amount:
                $ref: "#/definitions/LegacyCoins"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/LegacyStdTx"
        400:
          description: Invalid request
        500:
          description: Internal server error
  /hard/liquidate:
    post:
      deprecated: true
      summary: Attempt to liquidate a borrower that is over their loan-to-value
      tags:
        - Hard
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: hard liquidate body
          schema:
            properties:
              base_req:
                $ref: "#/definitions/LegacyBaseReq"
              borrower:
                $ref: "#/definitions/LegacyAddress"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/LegacyStdTx"
        400:
          description: Invalid request
        500:
          description: Internal server error
  /hard/parameters:
    get:
      deprecated: true
      summary: Get the current parameters of the hard module
      tags:
        - Hard
      produces:
        - application/json
      responses:
        200:
          description: Hard module parameters
          schema:
            type: object
            properties:
              height:
                type: string
                example: "100"
              result:
                type: array
                x-nullable: true
                items:
                  $ref: "#/definitions/LegacyHardParams"
        500:
          description: Server internal error
  /hard/total-deposited:
    get:
      deprecated: true
      summary: Get total coins deposited to hard liquidity pools
      tags:
        - Hard
      produces:
        - application/json
      parameters:
        - in: query
          name: denom
          description: Coin denom
          required: false
          type: string
          x-example: btc
      responses:
        200:
          description: total coins deposited
          schema:
            type: object
            properties:
              height:
                type: string
                example: "100"
              result:
                type: array
                x-nullable: true
                items:
                  $ref: "#/definitions/LegacyCoin"
        500:
          description: Server internal error
  /hard/total-borrowed:
    get:
      deprecated: true
      summary: Get total coins borrowed from hard liquidity pools
      tags:
        - Hard
      produces:
        - application/json
      parameters:
        - in: query
          name: denom
          description: Coin denom
          required: false
          type: string
          x-example: btc
      responses:
        200:
          description: total coins borrowed
          schema:
            type: object
            properties:
              height:
                type: string
                example: "100"
              result:
                type: array
                x-nullable: true
                items:
                  $ref: "#/definitions/LegacyCoin"
        500:
          description: Server internal error
  /hard/reserves:
    get:
      deprecated: true
      summary: Get total hard reserve coins
      tags:
        - Hard
      produces:
        - application/json
      parameters:
        - in: query
          name: denom
          description: Coin denom
          required: false
          type: string
          x-example: btc
      responses:
        200:
          description: reserve coins
          schema:
            type: object
            properties:
              height:
                type: string
                example: "100"
              result:
                type: array
                x-nullable: true
                items:
                  $ref: "#/definitions/LegacyCoin"
        500:
          description: Server internal error
  /hard/interest-rate:
    get:
      deprecated: true
      summary: Get the hard module interest rates
      tags:
        - Hard
      produces:
        - application/json
      parameters:
        - in: query
          name: denom
          description: Money market denom
          required: false
          type: string
          x-example: bnb
      responses:
        200:
          description: money market interest rates
          schema:
            type: object
            properties:
              height:
                type: string
                example: "100"
              result:
                type: array
                x-nullable: true
                items:
                  $ref: "#/definitions/LegacyMoneyMarketInterestRate"
        500:
          description: Server internal error
  /hard/accounts:
    get:
      deprecated: true
      summary: Get the hard module accounts
      tags:
        - Hard
      produces:
        - application/json
      responses:
        200:
          description: The hard module accounts
          schema:
            type: object
            properties:
              height:
                type: string
                example: "100"
              result:
                type: array
                items:
                  type: object
                  properties:
                    account_number:
                      type: number
                    address:
                      $ref: "#/definitions/LegacyAddress"
                    coins:
                      type: array
                      items:
                        $ref: "#/definitions/LegacyCoin"
                    name:
                      type: string
                    permissions:
                      type: array
                      items:
                        type: string
                    public_key:
                      $ref: "#/definitions/LegacyPublicKey"
                    sequence:
                      type: number
        500:
          description: Server internal error
  /hard/deposits:
    get:
      deprecated: true
      summary: Get hard deposits
      tags:
        - Hard
      produces:
        - application/json
      parameters:
        - in: query
          name: denom
          description: Deposit coin denom
          required: false
          type: string
          x-example: btc
        - in: query
          name: owner
          description: Owner address in bech32 format
          required: false
          type: string
          x-example: kava1ffv7nhd3z6sych2qpqkk03ec6hzkmufy0r2s4c
        - in: query
          name: page
          description: The page number.
          type: integer
          x-example: 1
        - in: query
          name: limit
          description: The maximum number of items per page.
          type: integer
          x-example: 100
      responses:
        200:
          description: hard deposits
          schema:
            type: object
            properties:
              height:
                type: string
                example: "100"
              result:
                type: array
                x-nullable: true
                items:
                  $ref: "#/definitions/LegacyHardDepositResponse"
        500:
          description: Server internal error
  /hard/borrows:
    get:
      deprecated: true
      summary: Get hard borrows
      tags:
        - Hard
      produces:
        - application/json
      parameters:
        - in: query
          name: denom
          description: Borrow coin denom
          required: false
          type: string
          x-example: btc
        - in: query
          name: owner
          description: Owner address in bech32 format
          required: false
          type: string
          x-example: kava1ffv7nhd3z6sych2qpqkk03ec6hzkmufy0r2s4c
        - in: query
          name: page
          description: The page number.
          type: integer
          x-example: 1
        - in: query
          name: limit
          description: The maximum number of items per page.
          type: integer
          x-example: 100
      responses:
        200:
          description: hard borrows
          schema:
            type: object
            properties:
              height:
                type: string
                example: "100"
              result:
                type: array
                x-nullable: true
                items:
                  $ref: "#/definitions/LegacyHardBorrowResponse"
        500:
          description: Server internal error
  /issuance/issue:
    post:
      deprecated: true
      summary: Issue tokens
      tags:
        - Issuance
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: Issue tokens body
          schema:
            properties:
              base_req:
                $ref: "#/definitions/LegacyBaseReq"
              sender:
                $ref: "#/definitions/LegacyAddress"
              tokens:
                $ref: "#/definitions/LegacyCoin"
              receiver:
                $ref: "#/definitions/LegacyAddress"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/LegacyStdTx"
        400:
          description: Invalid request
        500:
          description: Internal server error
  /issuance/redeem:
    post:
      deprecated: true
      summary: Redeem tokens
      tags:
        - Issuance
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: Redeem tokens body
          schema:
            properties:
              base_req:
                $ref: "#/definitions/LegacyBaseReq"
              sender:
                $ref: "#/definitions/LegacyAddress"
              tokens:
                $ref: "#/definitions/LegacyCoin"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/LegacyStdTx"
        400:
          description: Invalid request
        500:
          description: Internal server error
  /issuance/block:
    post:
      deprecated: true
      summary: Block an address from using an issued token
      tags:
        - Issuance
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: Block address body
          schema:
            properties:
              base_req:
                $ref: "#/definitions/LegacyBaseReq"
              sender:
                $ref: "#/definitions/LegacyAddress"
              denom:
                type: string
                example: "usdt"
              blocked_address:
                $ref: "#/definitions/LegacyAddress"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/LegacyStdTx"
        400:
          description: Invalid request
        500:
          description: Internal server error
  /issuance/unblock:
    post:
      deprecated: true
      summary: Unblock an address from using an issued token
      tags:
        - Issuance
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: Unblock address body
          schema:
            properties:
              base_req:
                $ref: "#/definitions/LegacyBaseReq"
              sender:
                $ref: "#/definitions/LegacyAddress"
              denom:
                type: string
                example: "usdt"
              address:
                $ref: "#/definitions/LegacyAddress"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/LegacyStdTx"
        400:
          description: Invalid request
        500:
          description: Internal server error
  /issuance/pause:
    post:
      deprecated: true
      summary: Set an issued token's pause status
      tags:
        - Issuance
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: Set pause status body
          schema:
            properties:
              base_req:
                $ref: "#/definitions/LegacyBaseReq"
              sender:
                $ref: "#/definitions/LegacyAddress"
              denom:
                type: string
                example: "usdt"
              status:
                type: boolean
                example: true
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/LegacyStdTx"
        400:
          description: Invalid request
        500:
          description: Internal server error
  /issuance/parameters:
    get:
      deprecated: true
      summary: Get the current parameters of the Issuance module
      tags:
        - Issuance
      produces:
        - application/json
      responses:
        200:
          description: Issuance parameters
          schema:
            type: object
            properties:
              height:
                type: string
                example: "100"
              result:
                type: array
                x-nullable: true
                items:
                  $ref: "#/definitions/LegacyIssuanceParams"
        500:
          description: Server internal error
  /swap/deposit:
    post:
      deprecated: true
      summary: Deposit funds to swap liquidity pool
      tags:
        - Swap
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: swap deposit body
          schema:
            properties:
              base_req:
                $ref: "#/definitions/LegacyBaseReq"
              depositor:
                $ref: "#/definitions/LegacyAddress"
              token_a:
                $ref: "#/definitions/LegacyCoin"
              token_b:
                $ref: "#/definitions/LegacyCoin"
              slippage:
                type: string
                example: "0.05"
              deadline:
                type: string
                example: "1628073801"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/LegacyStdTx"
        400:
          description: Invalid request
        500:
          description: Internal server error
  /swap/withdraw:
    post:
      deprecated: true
      summary: Withdraw funds from a swap liquidity pool
      tags:
        - Swap
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: swap withdraw body
          schema:
            properties:
              base_req:
                $ref: "#/definitions/LegacyBaseReq"
              from:
                $ref: "#/definitions/LegacyAddress"
              shares:
                type: string
                example: "5000"
              min_token_a:
                $ref: "#/definitions/LegacyCoin"
              min_token_b:
                $ref: "#/definitions/LegacyCoin"
              deadline:
                type: string
                example: "1628073801"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/LegacyStdTx"
        400:
          description: Invalid request
        500:
          description: Internal server error
  /swap/swapExactForTokens:
    post:
      deprecated: true
      summary: Swap exact amount of input tokens for approximate amount of output tokens
      tags:
        - Swap
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: swap exact for tokens body
          schema:
            properties:
              base_req:
                $ref: "#/definitions/LegacyBaseReq"
              requester:
                $ref: "#/definitions/LegacyAddress"
              exact_token_a:
                $ref: "#/definitions/LegacyCoin"
              token_b:
                $ref: "#/definitions/LegacyCoin"
              slippage:
                type: string
                example: "0.05"
              deadline:
                type: string
                example: "1628073801"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/LegacyStdTx"
        400:
          description: Invalid request
        500:
          description: Internal server error
  /swap/swapForExactTokens:
    post:
      deprecated: true
      summary: Swap approximate amount of input tokens for exact amount of output tokens
      tags:
        - Swap
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: swap for exact tokens body
          schema:
            properties:
              base_req:
                $ref: "#/definitions/LegacyBaseReq"
              requester:
                $ref: "#/definitions/LegacyAddress"
              token_a:
                $ref: "#/definitions/LegacyCoin"
              exact_token_b:
                $ref: "#/definitions/LegacyCoin"
              slippage:
                type: string
                example: "0.05"
              deadline:
                type: string
                example: "1628073801"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/LegacyStdTx"
        400:
          description: Invalid request
        500:
          description: Internal server error
  /swap/parameters:
    get:
      deprecated: true
      summary: Get the current parameters of the swap module
      tags:
        - Swap
      produces:
        - application/json
      responses:
        200:
          description: Swap module parameters
          schema:
            type: object
            properties:
              height:
                type: string
                example: "100"
              result:
                type: array
                x-nullable: true
                items:
                  $ref: "#/definitions/LegacySwapParams"
        500:
          description: Server internal error
  /swap/deposits:
    get:
      deprecated: true
      summary: Get the current deposits of a liquidity pool
      tags:
        - Swap
      produces:
        - application/json
      parameters:
        - in: query
          name: owner
          description: Owner address in bech32 format
          required: false
          type: string
          x-example: kava1ffv7nhd3z6sych2qpqkk03ec6hzkmufy0r2s4c
        - in: query
          name: pool
          description: Pool ID
          required: false
          type: string
          x-example: "abc:xyz"
      responses:
        200:
          description: Liquidity pool deposits
          schema:
            type: object
            properties:
              height:
                type: string
                example: "100"
              result:
                type: array
                x-nullable: true
                items:
                  $ref: "#/definitions/LegacySwapDepositsQueryResult"
        500:
          description: Server internal error
  /swap/pool:
    get:
      deprecated: true
      summary: Get information about a liquidity pool by ID
      tags:
        - Swap
      produces:
        - application/json
      parameters:
        - in: query
          name: pool
          description: Pool ID
          required: true
          type: string
          x-example: "abc:xyz"
      responses:
        200:
          description: Liquidity pool statistics
          schema:
            type: object
            properties:
              height:
                type: string
                example: "100"
              result:
                type: array
                items:
                  $ref: "#/definitions/LegacySwapPoolStatsQueryResult"
        500:
          description: Server internal error
  /swap/pools:
    get:
      deprecated: true
      summary: Get information about all liquidity pools
      tags:
        - Swap
      produces:
        - application/json
      responses:
        200:
          description: Statistics for all liquidity pools
          schema:
            type: object
            properties:
              height:
                type: string
                example: "100"
              result:
                type: array
                x-nullable: true
                items:
                  $ref: "#/definitions/LegacySwapPoolStatsQueryResult"
        500:
          description: Server internal error
  /kavadist/parameters:
    get:
      deprecated: true
      summary: Get the current kavadist parameter values
      tags:
        - Kavadist
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              active:
                type: string
              periods:
                type: array
                items:
                  $ref: "#/definitions/LegacyKavadistPeriod"
        500:
          description: Internal Server Error

definitions:
  LegacyCrossChain:
    type: boolean
    example: true
  LegacyMsg:
    type: object
    properties:
      type:
        type: string
        example: "cosmos-sdk/MsgSend"
      value:
        type: object
        properties:
          from_address:
            type: string
            example: kava1ffv7nhd3z6sych2qpqkk03ec6hzkmufy0r2s4c
          to_address:
            type: string
            example: kava1ls82zzghsx0exkpr52m8vht5jqs3un0ceysshz
          amount:
            type: array
            items:
              $ref: "#/definitions/LegacyCoin"
  LegacyAddress:
    type: string
    description: bech32 encoded address
    example: kava1ffv7nhd3z6sych2qpqkk03ec6hzkmufy0r2s4c
  LegacyAddress2:
    type: string
    description: bech32 encoded address
    example: kava1atsrkjac6ulgmwhudfc36lnjfgv340vlvm757z
  LegacyBinanceChainAddress:
    type: string
    description: address on another chain (binance)
    example: bnb1uky3me9ggqypmrsvxk7ur6hqkzq7zmv4ed4ng7
  LegacyBinanceChainAddress2:
    type: string
    description: address on another chain (binance)
    example: bnb10uypsspvl6jlxcx5xse02pag39l8xpe7a3468h
  LegacyRandomNumberHash:
    type: string
    description: hex-encoded sha256 hash of a 64bit random number
    example: c0544b7f4b890a673ea3f61bdb4650fbfe2f3e56bda1b397d6d592fca7163c8c
  LegacyTimestamp:
    type: string
    description: unix timestamp
    example: "1585252531"
  LegacyHeightSpan:
    type: string
    description: span of blocks for which an atomic swap is valid
    example: "3600"
  LegacyCoin:
    type: object
    properties:
      denom:
        type: string
        example: ukava
      amount:
        type: string
        example: "50000"
  LegacyCoins:
    type: array
    items:
      $ref: "#/definitions/LegacyCoins"
  LegacyCoinBNB:
    type: object
    properties:
      denom:
        type: string
        example: bnb
      amount:
        type: string
        example: "555555"
  LegacyCollateralType:
    type: string
    example: xrpb-a
  LegacyCoinCollateral:
    type: object
    properties:
      denom:
        type: string
        example: "xrp"
      amount:
        type: string
        example: "10000000000"
  LegacyCoinPrincipal:
    type: object
    properties:
      denom:
        type: string
        example: "usdx"
      amount:
        type: string
        example: "10000000"
  LegacyCoinBid:
    type: object
    properties:
      denom:
        type: string
        example: "usdx"
      amount:
        type: string
        example: "100000000"
  LegacySignature:
    type: object
    properties:
      signature:
        type: string
        example: "W1HfKcc4F0rCSoxheZ7fsrB5nGK58U4gKysuzsmUwhloVnCxmbCx289uVMMvQN6tOcQsz7hMVTJrXSA1xzevvw=="
      pubkey:
        type: object
        properties:
          type:
            type: string
            example: "tendermint/PubKeySecp256k1"
          value:
            type: string
            example: "Agey31h/NYpcy0sYm4liHMrXJMzbQUrgV4uHd/w09CXN"
  LegacyStdTx:
    type: object
    properties:
      msg:
        type: array
        items:
          $ref: "#/definitions/LegacyMsg"
      fee:
        type: object
        properties:
          gas:
            type: string
            example: "200000"
          amount:
            type: array
            items:
              $ref: "#/definitions/LegacyCoin"
      memo:
        type: string
      signatures:
        type: array
        items:
          $ref: "#/definitions/LegacySignature"
  LegacyBaseReq:
    type: object
    properties:
      from:
        type: string
        example: "kava1ffv7nhd3z6sych2qpqkk03ec6hzkmufy0r2s4c"
        description: Sender address or Keybase name to generate a transaction
      memo:
        type: string
        example: "a memo"
      chain_id:
        type: string
        example: "testing"
      account_number:
        type: string
        example: "1"
      sequence:
        type: string
        example: "0"
      gas:
        type: string
        example: "200000"
      gas_adjustment:
        type: string
        example: "1.0"
      fees:
        type: array
        items:
          $ref: "#/definitions/LegacyCoin"
      simulate:
        type: boolean
        example: false
        description: Estimate gas for a transaction (cannot be used in conjunction with generate_only)
  LegacyAtomicSwapResponse:
    type: object
    properties:
      id:
        type: string
        example: FFEA80A3D9A42427CC12DB957866C6D428C16AA5EA6D9A4A756EF04BF9F2FF06
      status:
        type: string
        example: Completed
      amount:
        $ref: "#/definitions/LegacyCoinBNB"
      random_number_hash:
        type: string
        example: 0b1e35e991bf052be230ae8dd3ff90b69a610160d28a9eb3c0701395f9d2b291
      expire_hieght:
        type: string
        example: "532463"
      timestamp:
        type: string
        example: "1589020884"
      sender:
        $ref: "#/definitions/LegacyAddress"
      recipient:
        $ref: "#/definitions/LegacyAddress2"
      sender_other_chain:
        $ref: "#/definitions/LegacyBinanceChainAddress"
      recipient_other_chain:
        $ref: "#/definitions/LegacyBinanceChainAddress2"
      closed_block:
        type: string
        example: "532105"
      cross_chain:
        $ref: "#/definitions/LegacyCrossChain"
      direction:
        type: string
        example: Incoming
  LegacyAssetSupplyResponse:
    type: object
    properties:
      denom:
        type: string
        example: bnb
      incoming_supply:
        $ref: "#/definitions/LegacyCoinBNB"
      outgoing_supply:
        $ref: "#/definitions/LegacyCoinBNB"
      current_supply:
        $ref: "#/definitions/LegacyCoinBNB"
      limit:
        $ref: "#/definitions/LegacyCoinBNB"
  LegacyBep3ParamsResponse:
    type: object
    properties:
      bnb_deputy_address:
        type: string
        example: kava1aphsdnz5hu2t5ty2au6znprug5kx3zpy6zwq29
      min_block_lock:
        type: string
        example: "80"
      max_block_lock:
        type: string
        example: "3600"
      supported_assets:
        type: array
        items:
          $ref: "#/definitions/LegacyBep3Asset"
  LegacyBep3Asset:
    type: object
    properties:
      denom:
        type: string
        example: bnb
      coin_id:
        type: string
        example: "714"
      limit:
        type: string
        example: "100"
      active:
        type: boolean
        example: true
  LegacyRewardResult:
    type: object
    properties:
      hard_claims:
        type: array
        items:
          $ref: "#/definitions/LegacyHardLiquidityProviderClaim"
      usdx_minting_claims:
        type: array
        items:
          $ref: "#/definitions/LegacyUSDXMintingClaims"
  LegacyHardLiquidityProviderClaim:
    type: object
    properties:
      base_claim:
        $ref: "#/definitions/LegacyBaseMultiClaim"
      supply_reward_indexes:
        type: array
        items:
          $ref: "#/definitions/LegacyMultiRewardIndex"
      borrow_reward_indexes:
        type: array
        items:
          $ref: "#/definitions/LegacyMultiRewardIndex"
      delegator_reward_indexes:
        type: array
        items:
          $ref: "#/definitions/LegacyRewardIndex"
  LegacyUSDXMintingClaims:
    type: object
    properties:
      base_claim:
        $ref: "#/definitions/LegacyBaseClaim"
      reward_indexes:
        type: array
        items:
          $ref: "#/definitions/LegacyRewardIndex"
  LegacyBaseClaim:
    type: object
    properties:
      owner:
        $ref: "#/definitions/LegacyAddress"
      reward:
        $ref: "#/definitions/LegacyCoin"
  LegacyBaseMultiClaim:
    type: object
    properties:
      owner:
        $ref: "#/definitions/LegacyAddress"
      reward:
        type: array
        items:
          $ref: "#/definitions/LegacyCoin"
  LegacyMultiRewardIndex:
    type: object
    properties:
      collateral_type:
        type: string
        example: "bnb"
      reward_indexes:
        type: array
        items:
          $ref: "#/definitions/LegacyRewardIndex"
  LegacyRewardIndex:
    type: object
    properties:
      collateral_type:
        type: string
        example: "bnb"
      reward_factor:
        type: string
        example: "1.2581"
  LegacyIncentiveParams:
    type: object
    properties:
      usdx_minting_reward_periods:
        type: array
        items:
          $ref: "#/definitions/LegacyRewardPeriod"
      hard_supply_reward_periods:
        type: array
        items:
          $ref: "#/definitions/LegacyMultiRewardPeriod"
      hard_borrow_reward_periods:
        type: array
        items:
          $ref: "#/definitions/LegacyMultiRewardPeriod"
      hard_delegator_reward_periods:
        type: array
        items:
          $ref: "#/definitions/LegacyRewardPeriod"
      claim_multipliers:
        type: array
        items:
          $ref: "#/definitions/LegacyMultiplier"
      claim_end:
        type: string
        example: "2022-02-05T23:45:55.761435272Z"
  LegacyRewardPeriod:
    type: object
    properties:
      active:
        type: boolean
        example: true
      collateral_type:
        type: string
        example: bnb
      start:
        type: string
        example: "2020-02-05T23:45:55.761435272Z"
      end:
        type: string
        example: "2024-02-05T23:45:55.761435272Z"
      rewards_per_second:
        $ref: "#/definitions/LegacyCoin"
  LegacyMultiRewardPeriod:
    type: object
    properties:
      active:
        type: boolean
        example: true
      collateral_type:
        type: string
        example: bnb
      start:
        type: string
        example: "2020-02-05T23:45:55.761435272Z"
      end:
        type: string
        example: "2024-02-05T23:45:55.761435272Z"
      rewards_per_second:
        type: array
        items:
          $ref: "#/definitions/LegacyCoin"
  LegacyPubProposal:
    type: object
    properties:
      title:
        type: string
        example: "the title of the proposal"
      description:
        type: string
        example: "the description of the proposal"
  LegacyCdpResponse:
    type: object
    properties:
      id:
        type: string
        example: "1"
      owner:
        type: string
        example: kava1q53rwutgpzx7szcrgzqguxyccjpzt9j4cyctn9
      collateral:
        $ref: "#/definitions/LegacyCoinCollateral"
      type:
        type: string
        example: "xrpb-a"
      principal:
        $ref: "#/definitions/LegacyCoinPrincipal"
      accumulated_fees:
        $ref: "#/definitions/LegacyCoinPrincipal"
      fees_updated:
        type: string
        example: "2020-02-05T23:45:55.761435272Z"
      collateral_value:
        $ref: "#/definitions/LegacyCoinPrincipal"
      collateralization_ratio:
        type: string
        example: "2.721734157907653857"
  LegacyCdpDepositResponse:
    type: object
    properties:
      cdp_id:
        type: string
        example: "1"
      depositor:
        type: string
        example: kava1q53rwutgpzx7szcrgzqguxyccjpzt9j4cyctn9
      amount:
        $ref: "#/definitions/LegacyCoinCollateral"
    
  LegacyPricefeedParameters:
    type: object
    properties:
      markets:
        type: array
        items:
          $ref: "#/definitions/LegacyMarket"
  LegacyPrice:
    type: object
    properties:
      market_id:
        type: string
        example: "xrp:usd"
      price:
        type: string
        example: "0.298758999999999997"
  LegacyPostedPrice:
    type: object
    properties:
      market_id:
        type: string
        example: "xrp:usd"
      oracle_address:
        type: string
        example: kava10cw2m04528dwlc44k0myd7strj3eq5jr6s8pxs
      price:
        type: string
        example: "0.298758999999999997"
      expiry:
        type: string
        example: "2021-02-12T23:10:00Z"
  LegacyMarket:
    type: object
    properties:
      market_id:
        type: string
        example: "xrp:usd"
      base_asset:
        type: string
        example: "xrp"
      quote_asset:
        type: string
        example: "usd"
      oracles:
        type: array
        x-nullable: true
        items:
          $ref: "#/definitions/LegacyAddress"
      active:
        type: boolean
        example: true
  LegacySwapParams:
    type: object
    properties:
      allowed_pools:
        type: array
        items:
          $ref: "#/definitions/LegacyAllowedPool"
      swap_fee:
        type: string
        example: "0.03"
  LegacyAllowedPool:
    type: object
    properties:
      token_a:
        type: string
        example: "ukava"
      token_b:
        type: string
        example: "usdx"
  LegacySwapDepositsQueryResult:
    type: object
    properties:
      depositor:
        $ref: "#/definitions/LegacyAddress"
      pool_id:
        type: string
        example: "abc:xyz"
      shares_owned:
        type: string
        example: "500"
      shares_value:
        $ref: "#/definitions/LegacyCoins"
  LegacySwapPoolStatsQueryResult:
    type: object
    properties:
      name:
        type: string
        example: "abc:xyz"
      coins:
        $ref: "#/definitions/LegacyCoins"
      total_shares:
        type: string
        example: "500"
  LegacyHardParams:
    type: object
    properties:
      money_markets:
        type: array
        items:
          $ref: "#/definitions/LegacyMoneyMarket"
      minimum_borrow_usd_value:
        type: string
        example: "10"
  LegacyMoneyMarket:
    type: object
    properties:
      denom:
        type: string
        example: "bnb"
      borrow_limit:
        $ref: "#/definitions/LegacyBorrowLimit"
      spot_market_id:
        type: string
        example: "bnb:usd"
      conversion_factor:
        type: string
        example: "100000000"
      interest_rate_model:
        $ref: "#/definitions/LegacyInterestRateModel"
      reserve_factor:
        type: string
        example: "0.05"
      keeper_reward_percentage:
        type: string
        example: "0.05"
  LegacyBorrowLimit:
    type: object
    properties:
      has_max_limit:
        type: boolean
        example: true
      maximum_limit:
        type: string
        example: "100000000000000"
      loan_to_value:
        type: string
        example: "0.8"
  LegacyInterestRateModel:
    type: object
    properties:
      base_rate_apy:
        type: string
        example: "0"
      base_multiplier:
        type: string
        example: "0.1"
      kink:
        type: string
        example: "0.8"
      jump_multiplier:
        type: string
        example: "0.5"
  LegacyHardDepositResponse:
    type: object
    properties:
      depositor:
        $ref: "#/definitions/LegacyAddress"
      amount:
        type: array
        items:
          $ref: "#/definitions/LegacyCoin"
      index:
        type: array
        items:
          $ref: "#/definitions/LegacySupplyInterestFactor"
  LegacyHardBorrowResponse:
    type: object
    properties:
      borrower:
        $ref: "#/definitions/LegacyAddress"
      amount:
        type: array
        items:
          $ref: "#/definitions/LegacyCoin"
      index:
        type: array
        items:
          $ref: "#/definitions/LegacyBorrowInterestFactor"
  LegacySupplyInterestFactor:
    type: object
    properties:
      denom:
        type: string
        example: "bnb"
      value:
        type: string
        example: "0.1258"
  LegacyBorrowInterestFactor:
    type: object
    properties:
      denom:
        type: string
        example: "bnb"
      value:
        type: string
        example: "0.1258"
  LegacyMoneyMarketInterestRate:
    type: object
    properties:
      denom:
        type: string
        example: "bnb"
      supply_interest_rate:
        type: string
        example: "5.25"
      borrow_interest_rate:
        type: string
        example: "5.25"
  LegacyMultiplierName:
    type: string
    example: "small"
  LegacyMultiplier:
    type: object
    properties:
      name:
        $ref: "#/definitions/LegacyMultiplierName"
      months_lockup:
        type: string
        example: "12"
      factor:
        type: string
        example: "0.33"
  LegacyIssuanceParams:
    type: object
    properties:
      assets:
        type: array
        items:
          $ref: "#/definitions/LegacyIssuanceAsset"
  LegacyIssuanceAsset:
    type: object
    properties:
      owner:
        $ref: "#/definitions/LegacyAddress"
      denom:
        type: string
        example: "btc"
      blocked_addresses:
        type: array
        items:
          $ref: "#/definitions/LegacyAddress"
      paused:
        type: boolean
        example: false
      blockable:
        type: boolean
        example: true
      rate_limit:
        $ref: "#/definitions/LegacyRateLimit"
  LegacyRateLimit:
    type: object
    properties:
      active:
        type: boolean
        example: true
      limit:
        type: string
        example: "500000000"
      time_period:
        type: string
        example: "518400000000000"
  LegacyAuctionParameters:
    type: object
    properties:
      max_auction_duration:
        type: string
        example: "172800000000000"
      bid_duration:
        type: string
        example: "600000000000"
      increment_surplus:
        type: string
        example: "0.05"
      increment_debt:
        type: string
        example: "0.05"
      increment_collateral:
        type: string
        example: "0.05"
  LegacyAuctionResponse:
    type: object
    properties:
      id:
        type: string
        example: "1"
      initiator:
        type: string
        example: liquidator
      lot:
        $ref: "#/definitions/LegacyCoinCollateral"
      bidder:
        $ref: "#/definitions/LegacyAddress"
      bid:
        $ref: "#/definitions/LegacyCoin"
      has_received_bids:
        type: boolean
        example: false
      end_time:
        type: string
        example: "2020-02-05T23:45:55.761435272Z"
      max_end_time:
        type: string
        example: "2020-02-05T23:45:55.761435272Z"
      type:
        type: string
        example: collateral
      phase:
        type: string
        example: forward
  LegacyCollateralParam:
    type: object
    properties:
      denom:
        type: string
        example: xrp
      type:
        type: string
        example: xrp-a
      liquidation_ratio:
        type: string
        example: "2.000000000000000000"
      debt_limit:
        $ref: "#/definitions/LegacyCoinPrincipal"
      stability_fee:
        type: string
        example: "1.000000001547126000"
      auction_size:
        type: string
        example: "5000000000"
      liquidation_penalty:
        type: string
        example: "0.050000000000000000"
      prefix:
        type: integer
        example: 0
      spot_market_id:
        type: string
        example: "xrp:usd"
      liquidation_market_id:
        type: string
        example: "xrp:usd:30"
      keeper_reward_percentage:
        type: string
        example: "0.05"
      check_collateralization_index_count:
        type: string
        example: "10"
      conversion_factor:
        type: string
        example: "6"
  LegacyDebtParam:
    type: object
    properties:
      denom:
        type: string
        example: usdx
      reference_asset:
        type: string
        example: "usd"
      conversion_factor:
        type: string
        example: "6"
      debt_floor:
        type: string
        example: "10000000"
  LegacyProposer:
    type: object
    properties:
      proposal_id:
        type: string
        example: "1"
      proposer:
        type: string
        example: kava1ffv7nhd3z6sych2qpqkk03ec6hzkmufy0r2s4c
  LegacyCommitteeVote:
    type: object
    properties:
      voter:
        type: string
      proposal_id:
        type: string
      vote_type:
        type: string
  LegacyCommitteeProposal:
    type: object
    properties:
      pub_proposal:
        $ref: "#/definitions/LegacyPubProposal"
      id:
        type: string
        example: "1"
      committee_id:
        type: string
        example: "1"
      deadline:
        type: string
        example: "2020-05-10T16:18:43.752522893Z"
  LegacyCommittee:
    type: object
    properties:
      id:
        type: string
        example: "1"
      description:
        type: string
        example: description of committee
      members:
        type: array
        items:
          $ref: "#/definitions/LegacyAddress"
      permissions:
        type: array
        items:
          $ref: "#/definitions/LegacyPermission"
      vote_threshold:
        type: string
        example: "0.5"
      proposal_duration:
        type: string
        example: "3600000000000"
  LegacyPermission:
    type: object
    properties:
      type:
        type: string
        example: "param_change_permission"
      allowed_params:
        type: array
        items:
          $ref: "#/definitions/LegacyAllowedParam"
  LegacyAllowedParam:
    type: object
    properties:
      subspace:
        type: string
        example: cdp
      key:
        type: string
        example: collateral_params
  LegacyRedelegation:
    type: object
    properties:
      delegator_address:
        type: string
      validator_src_address:
        type: string
      validator_dst_address:
        type: string
      entries:
        type: array
        items:
          $ref: "#/definitions/LegacyRedelegation"
  LegacyPublicKey:
    type: object
    properties:
      type:
        type: string
      value:
        type: string
  LegacyKavadistPeriod:
    type: object
    properties:
      start:
        type: string
        example: "2020-06-01:14:00:00Z"
      end:
        type: string
        example: "2020-06-01:14:00:00Z"
      inflation:
        type: string
        example: "1.000000001167363430"
