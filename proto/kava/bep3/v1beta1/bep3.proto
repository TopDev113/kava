syntax = "proto3";
package kava.bep3.v1beta1;

import "gogoproto/gogo.proto";

option go_package = "github.com/kava-labs/kava/x/bep3/types";

enum SwapStatus {
  NULL      = 0x00;
  OPEN      = 0x01;
  COMPLETED = 0x02;
  EXPIRED   = 0x03;
}

enum SwapDirection {
  INVALID  = 0x00;
  INCOMING = 0x01;
  OUTGOING = 0x02;
}

// Params defines the parameters for the pricefeed module.
message AtomicSwap {
  option (gogoproto.goproto_stringer) = false;

  repeated cosmos.base.v1beta1.Coin amount = 1 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable)     = false,
    (gogoproto.moretags)     = "yaml:\"amount\""
  ];
  bytes      random_number_hash    = 2 [(gogoproto.moretags) = "yaml:\"random_number_hash\""];
  uint64     expire_height         = 3 [(gogoproto.moretags) = "yaml:\"expire_height\""];
  int64      timestamp             = 4 [(gogoproto.moretags) = "yaml:\"timestamp\""];
  string     sender                = 5 [(gogoproto.moretags) = "yaml:\"sender\""];
  string     recipient             = 6 [(gogoproto.moretags) = "yaml:\"recipient\""];
  string     sender_other_chain    = 7 [(gogoproto.moretags) = "yaml:\"sender_other_chain\""];
  string     recipient_other_chain = 8 [(gogoproto.moretags) = "yaml:\"recipient_other_chain\""];
  int64      closed_block          = 9 [(gogoproto.moretags) = "yaml:\"closed_block\""];
  SwapStatus status                = 10 [(gogoproto.moretags) = "yaml:\"status\""];
  bool       cross_chain           = 11 [(gogoproto.moretags) = "yaml:\"cross_chain\""];
  SwapDirection direction = 12 [(gogoproto.moretags) = "yaml:\"direction\""];
}

message AssetSupply {
  cosmos.base.v1beta1.Coin incoming_supply = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.nullable)   = false,
    (gogoproto.moretags)   = "yaml:\"incoming_supply\""
  ];
  cosmos.base.v1beta1.Coin outgoing_supply = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.nullable)   = false,
    (gogoproto.moretags)   = "yaml:\"outgoing_supply\""
  ];
  cosmos.base.v1beta1.Coin current_supply = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.nullable)   = false,
    (gogoproto.moretags)   = "yaml:\"current_supply\""
  ];
  cosmos.base.v1beta1.Coin time_limited_current_supply = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.nullable)   = false,
    (gogoproto.moretags)   = "yaml:\"time_limited_current_supply\""
  ];
  google.protobuf.Duration time_elapsed = 5 [
    (gogoproto.nullable)    = false,
    (gogoproto.stdduration) = true,
    (gogoproto.moretags)    = "yaml:\"time_elapsed,omitempty\""
  ];
}
