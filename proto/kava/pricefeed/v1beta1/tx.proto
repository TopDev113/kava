syntax = "proto3";
package kava.pricefeed.v1beta1;

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/kava-labs/kava/x/pricefeed/types";

// Msg defines the pricefeed Msg service.
service Msg {
  // PostPrice defines a method for creating a new post price
  rpc PostPrice(MsgPostPrice) returns (MsgPostPriceResponse);
}

// MsgPostPrice represents a method for creating a new post price
message MsgPostPrice {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  // address of client
  string from = 1 [ (gogoproto.moretags) = "yaml:\"from\"" ];
  string market_id = 2 [
    (gogoproto.moretags) = "yaml:\"market_id\"",
    (gogoproto.customname) = "MarketID"
  ];
  string price = 3 [
    (gogoproto.moretags) = "yaml:\"price\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  google.protobuf.Timestamp expiry = 4 [
    (gogoproto.stdtime) = true,
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"expiry\""
  ];
}

// MsgPostPriceResponse defines the Msg/PostPrice response type.
message MsgPostPriceResponse {}
