syntax = "proto3";
package kava.swap.v1beta1;

import "gogoproto/gogo.proto";

option go_package = "github.com/kava-labs/kava/x/swap/types";

// Msg defines the swap Msg service.
service Msg {
  // Deposit defines a method for depositing liquidity into a pool
  rpc Deposit(MsgDeposit) returns (MsgDepositResponse);

  // Withdraw defines a method for withdrawing liquidity into a pool
  rpc Withdraw(MsgWithdraw) returns (MsgWithdrawResponse);

  // SwapExactForTokens represents a message for trading exact coinA for coinB
  rpc SwapExactForTokens(MsgSwapExactForTokens) returns (MsgSwapExactForTokensResponse);

  // SwapForExactTokens represents a message for trading coinA for an exact
  // coinB
  rpc SwapForExactTokens(MsgSwapForExactTokens) returns (MsgSwapForExactTokensResponse);
}

// MsgDeposit represents a message for depositing liquidity into a pool
message MsgDeposit {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string depositor = 1;

  // TODO: define base types and use them
  // repeated cosmos.base.v1beta1.Coin amount = 3
  //     [(gogoproto.nullable) = false, (gogoproto.castrepeated) =
  //     "github.com/cosmos/cosmos-sdk/types.Coins"];

  bytes token_a = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.nullable)   = false,
    (gogoproto.jsontag)    = "token_a,omitempty",
    (gogoproto.moretags)   = "yaml:\"token_a\""
  ];

  bytes token_b = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.nullable)   = false,
    (gogoproto.jsontag)    = "token_b,omitempty",
    (gogoproto.moretags)   = "yaml:\"token_b\""
  ];

  bytes slippage = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false,
    (gogoproto.jsontag)    = "slippage,omitempty",
    (gogoproto.moretags)   = "yaml:\"slippage\""
  ];

  int64 deadline = 5;
}

// MsgDepositResponse defines the Msg/Deposit response type.
message MsgDepositResponse {}

// MsgWithdraw represents a message for withdrawing liquidity from a pool
message MsgWithdraw {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string from = 1;

  bytes shares = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable)   = false,
    (gogoproto.jsontag)    = "shares,omitempty",
    (gogoproto.moretags)   = "yaml:\"shares\""
  ];

  bytes min_token_a = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.nullable)   = false,
    (gogoproto.jsontag)    = "min_token_a,omitempty",
    (gogoproto.moretags)   = "yaml:\"min_token_a\""
  ];

  bytes min_token_b = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.nullable)   = false,
    (gogoproto.jsontag)    = "min_token_b,omitempty",
    (gogoproto.moretags)   = "yaml:\"min_token_b\""
  ];

  int64 deadline = 5;
}

// MsgWithdrawResponse defines the Msg/Withdraw response type.
message MsgWithdrawResponse {}

// MsgSwapExactForTokens represents a message for trading exact coinA for coinB
message MsgSwapExactForTokens {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string requester = 1;

  bytes exact_token_a = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.nullable)   = false,
    (gogoproto.jsontag)    = "exact_token_a,omitempty",
    (gogoproto.moretags)   = "yaml:\"exact_token_a\""
  ];

  bytes token_b = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.nullable)   = false,
    (gogoproto.jsontag)    = "token_b,omitempty",
    (gogoproto.moretags)   = "yaml:\"token_b\""
  ];

  bytes slippage = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false,
    (gogoproto.jsontag)    = "slippage,omitempty",
    (gogoproto.moretags)   = "yaml:\"slippage\""
  ];

  int64 deadline = 5;
}

// MsgSwapExactForTokensResponse defines the Msg/SwapExactForTokens response
// type.
message MsgSwapExactForTokensResponse {}

// MsgSwapForExactTokens represents a message for trading coinA for an exact
// coinB
message MsgSwapForExactTokens {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string requester = 1;

  bytes token_a = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.nullable)   = false,
    (gogoproto.jsontag)    = "token_a,omitempty",
    (gogoproto.moretags)   = "yaml:\"token_a\""
  ];

  bytes exact_token_b = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.nullable)   = false,
    (gogoproto.jsontag)    = "exact_token_b,omitempty",
    (gogoproto.moretags)   = "yaml:\"exact_token_b\""
  ];

  bytes slippage = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false,
    (gogoproto.jsontag)    = "slippage,omitempty",
    (gogoproto.moretags)   = "yaml:\"slippage\""
  ];

  int64 deadline = 5;
}

// MsgSwapForExactTokensResponse defines the Msg/SwapForExactTokensResponse
// response type.
message MsgSwapForExactTokensResponse {}
