syntax = "proto3";
package kava.earn.v1beta1;

option go_package = "github.com/kava-labs/kava/x/earn/types";

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "cosmos_proto/cosmos.proto";
import "kava/earn/v1beta1/params.proto";
import "kava/earn/v1beta1/strategy.proto";

// Query defines the gRPC querier service for earn module
service Query {
  // Params queries all parameters of the earn module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/kava/earn/v1beta1/params";
  }

  // Vaults queries vaults based on vault denom
  rpc Vaults(QueryVaultsRequest) returns (QueryVaultsResponse) {
    option (google.api.http).get = "/kava/earn/v1beta1/vaults";
  }

  // Deposits queries deposit details based on owner address and vault
  rpc Deposits(QueryDepositsRequest) returns (QueryDepositsResponse) {
    option (google.api.http).get = "/kava/earn/v1beta1/deposits";
  }
}

// QueryParamsRequest defines the request type for querying x/earn parameters.
message QueryParamsRequest {
  option (gogoproto.goproto_getters) = false;
}

// QueryParamsResponse defines the response type for querying x/earn parameters.
message QueryParamsResponse {
  option (gogoproto.goproto_getters) = false;

  // params represents the earn module parameters
  Params params = 1 [(gogoproto.nullable) = false];
}

// QueryVaultsRequest is the request type for the Query/Vault RPC method.
message QueryVaultsRequest {
  // vault filters vault by denom
  string denom = 1;
}

// QueryVaultsResponse is the response type for the Query/Vaults RPC method.
message QueryVaultsResponse {
  // vaults represents the earn module vaults
  repeated VaultResponse vaults = 1 [(gogoproto.nullable) = false];
}

message VaultResponse {
  // denom represents the denom of the vault
  string denom = 1;

  // VaultStrategy is the strategy used for this vault.
  StrategyType vault_strategy = 2;

  // TotalSupplied is the total amount of denom coins supplied to the vault.
  string total_supplied = 3 [
    (cosmos_proto.scalar)  = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable)   = false
  ];

  // TotalValue is the total value of denom coins supplied to the vault if the
  // vault were to be liquidated.
  string total_value = 4 [
    (cosmos_proto.scalar)  = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable)   = false
  ];
}

// QueryDepositsRequest is the request type for the Query/Deposits RPC method.
message QueryDepositsRequest {
  option (gogoproto.goproto_getters) = false;

  // owner optionally filters deposits by owner
  string owner = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // denom optionally filters deposits by vault denom
  string denom = 2;

  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 3;
}

// QueryDepositsResponse is the response type for the Query/Deposits RPC method.
message QueryDepositsResponse {
  option (gogoproto.goproto_getters) = false;

  // deposits returns the deposits matching the requested parameters
  repeated DepositResponse deposits = 1 [(gogoproto.nullable) = false];

  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// DepositResponse defines a single deposit query response type.
message DepositResponse {
  option (gogoproto.goproto_getters) = false;

  // depositor represents the owner of the deposit.
  string depositor = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // denom represents the vault denom the deposit is for.
  string denom = 2;

  // AccountSupplied represents the amount of denom supplied to the vault.
  string account_supplied = 3 [
    (cosmos_proto.scalar)  = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable)   = false
  ];

  // AccountValue represents the coin value of the depositor's share of the vault.
  string account_value = 4 [
    (cosmos_proto.scalar)  = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable)   = false
  ];
}
